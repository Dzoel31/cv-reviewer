name: Prune old release tags (keep N)

on:
  schedule:
    - cron: "0 18 * * 0"
  workflow_dispatch:

jobs:
  prune:
    runs-on: ubuntu-latest
    env:
      DH_USER: ${{ secrets.DOCKER_USERNAME }}
      DH_PASS: ${{ secrets.DOCKER_PUSH }}
      REPO: ${{ github.event.repository.name }}
      KEEP: "5"
    steps:
      - name: Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: Get JWT
        id: auth
        run: |
          TOKEN=$(curl -s -H "Content-Type: application/json" \
            -d "{\"username\":\"$DH_USER\",\"password\":\"$DH_PASS\"}" \
            https://hub.docker.com/v2/users/login/ | jq -r .token)
          [ -z "$TOKEN" -o "$TOKEN" = "null" ] && { echo "Login failed"; exit 1; }
          echo "token=$TOKEN" >> $GITHUB_OUTPUT

      - name: Prune per variant
        env:
          TOKEN: ${{ steps.auth.outputs.token }}
        shell: bash
        run: |
          fetch_tags() {
            local page=1
            while :; do
              RES=$(curl -s -H "Authorization: JWT $TOKEN" \
                "https://hub.docker.com/v2/repositories/$DH_USER/$REPO/tags?page_size=100&page=$page")
              echo "$RES"
              NEXT=$(echo "$RES" | jq -r .next)
              [ "$NEXT" = "null" ] && break
              page=$((page+1))
            done
          }

          # Ambil semua tag sekaligus
          ALL=$(fetch_tags)

          for VAR in adk ui; do
            echo "=== Variant: $VAR ==="
            # Ambil hanya tag rilis semver: $VAR-vX.Y.Z (exclude -latest)
            LIST=$(echo "$ALL" | jq -r --arg V "$VAR" '
              .results[]
              | select(.name | test("^" + $V + "-v[0-9]+\\.[0-9]+\\.[0-9]+$"))
              | [.name, .last_updated] | @tsv
            ' | sort -k2 -r)

            # Simpan N terbaru, hapus sisanya
            COUNT=0
            while IFS=$'\t' read -r NAME UPDATED; do
              [ -z "$NAME" ] && continue
              COUNT=$((COUNT+1))
              if [ "$COUNT" -le "$KEEP" ]; then
                echo "keep  $NAME ($UPDATED)"
              else
                echo "delete $NAME"
                curl -s -X DELETE -H "Authorization: JWT $TOKEN" \
                  "https://hub.docker.com/v2/repositories/$DH_USER/$REPO/tags/$NAME/" > /dev/null
              fi
            done <<< "$LIST"
          done
